*** Testing explode() for basic operations ***
-- Iteration 1 --

Warning: Invalid argument: delimiter: (empty) in %s/zend/good/ext/standard/tests/strings/explode1.php on line 30
bool(false)

Warning: Invalid argument: delimiter: (empty) in %s/zend/good/ext/standard/tests/strings/explode1.php on line 31
bool(false)

Warning: Invalid argument: delimiter: (empty) in %s/zend/good/ext/standard/tests/strings/explode1.php on line 32
bool(false)

Warning: Invalid argument: delimiter: (empty) in %s/zend/good/ext/standard/tests/strings/explode1.php on line 33
bool(false)
-- Iteration 2 --
string(54) "explode() expects parameter 1 to be string, null given"
string(54) "explode() expects parameter 1 to be string, null given"
string(54) "explode() expects parameter 1 to be string, null given"
string(54) "explode() expects parameter 1 to be string, null given"
-- Iteration 3 --
array(1) {
  [0]=>
  string(10) "1234NULL23"
}
array(1) {
  [0]=>
  string(57) "1234NULL23abcd00000TRUEFALSE-11.234444true-11.24%PHP%ZEND"
}
array(1) {
  [0]=>
  string(57) "1234NULL23abcd00000TRUEFALSE-11.234444true-11.24%PHP%ZEND"
}
array(2) {
  [0]=>
  string(10) "1234NULL23"
  [1]=>
  string(43) "00000TRUEFALSE-11.234444true-11.24%PHP%ZEND"
}
-- Iteration 4 --
string(57) "explode() expects parameter 1 to be string, integer given"
string(57) "explode() expects parameter 1 to be string, integer given"
string(57) "explode() expects parameter 1 to be string, integer given"
string(57) "explode() expects parameter 1 to be string, integer given"
-- Iteration 5 --
array(5) {
  [0]=>
  string(14) "1234NULL23abcd"
  [1]=>
  string(0) ""
  [2]=>
  string(0) ""
  [3]=>
  string(0) ""
  [4]=>
  string(0) ""
}
array(1) {
  [0]=>
  string(57) "1234NULL23abcd00000TRUEFALSE-11.234444true-11.24%PHP%ZEND"
}
array(1) {
  [0]=>
  string(57) "1234NULL23abcd00000TRUEFALSE-11.234444true-11.24%PHP%ZEND"
}
array(2) {
  [0]=>
  string(14) "1234NULL23abcd"
  [1]=>
  string(42) "0000TRUEFALSE-11.234444true-11.24%PHP%ZEND"
}
-- Iteration 6 --
string(57) "explode() expects parameter 1 to be string, boolean given"
string(57) "explode() expects parameter 1 to be string, boolean given"
string(57) "explode() expects parameter 1 to be string, boolean given"
string(57) "explode() expects parameter 1 to be string, boolean given"
-- Iteration 7 --
string(57) "explode() expects parameter 1 to be string, boolean given"
string(57) "explode() expects parameter 1 to be string, boolean given"
string(57) "explode() expects parameter 1 to be string, boolean given"
string(57) "explode() expects parameter 1 to be string, boolean given"
-- Iteration 8 --
string(57) "explode() expects parameter 1 to be string, integer given"
string(57) "explode() expects parameter 1 to be string, integer given"
string(57) "explode() expects parameter 1 to be string, integer given"
string(57) "explode() expects parameter 1 to be string, integer given"
-- Iteration 9 --
string(56) "explode() expects parameter 1 to be string, double given"
string(56) "explode() expects parameter 1 to be string, double given"
string(56) "explode() expects parameter 1 to be string, double given"
string(56) "explode() expects parameter 1 to be string, double given"
-- Iteration 10 --
string(57) "explode() expects parameter 1 to be string, integer given"
string(57) "explode() expects parameter 1 to be string, integer given"
string(57) "explode() expects parameter 1 to be string, integer given"
string(57) "explode() expects parameter 1 to be string, integer given"
-- Iteration 11 --
array(2) {
  [0]=>
  string(48) "1234NULL23abcd00000TRUEFALSE-11.234444true-11.24"
  [1]=>
  string(3) "PHP"
}
array(1) {
  [0]=>
  string(57) "1234NULL23abcd00000TRUEFALSE-11.234444true-11.24%PHP%ZEND"
}
array(1) {
  [0]=>
  string(57) "1234NULL23abcd00000TRUEFALSE-11.234444true-11.24%PHP%ZEND"
}
array(2) {
  [0]=>
  string(48) "1234NULL23abcd00000TRUEFALSE-11.234444true-11.24"
  [1]=>
  string(8) "PHP%ZEND"
}

*** Testing explode() with miscelleneous input arguments ***

-- Passing positive values of Limit to explode() --
array(2) {
  [0]=>
  string(3) "mon"
  [1]=>
  string(31) "tues::wed::thurs::fri::sat::sun"
}

-- Passing limit values 0 and 1 to explode() --
array(1) {
  [0]=>
  string(29) "Name:Phone:Address:City:State"
}
array(1) {
  [0]=>
  string(29) "Name:Phone:Address:City:State"
}

*** Testing explode() for maximum limit of string with Limit = -1 ***
array(51) {
  [0]=>
  string(1) "1"
  [1]=>
  string(1) "2"
  [2]=>
  string(1) "3"
  [3]=>
  string(1) "4"
  [4]=>
  string(1) "5"
  [5]=>
  string(1) "6"
  [6]=>
  string(1) "7"
  [7]=>
  string(1) "7"
  [8]=>
  string(1) "5"
  [9]=>
  string(1) "6"
  [10]=>
  string(1) "7"
  [11]=>
  string(1) "3"
  [12]=>
  string(1) "4"
  [13]=>
  string(1) "5"
  [14]=>
  string(1) "2"
  [15]=>
  string(1) "8"
  [16]=>
  string(1) "9"
  [17]=>
  string(1) "0"
  [18]=>
  string(1) "5"
  [19]=>
  string(1) "5"
  [20]=>
  string(1) "5"
  [21]=>
  string(1) "5"
  [22]=>
  string(1) "5"
  [23]=>
  string(1) "5"
  [24]=>
  string(1) "5"
  [25]=>
  string(1) "5"
  [26]=>
  string(1) "5"
  [27]=>
  string(1) "5"
  [28]=>
  string(1) "5"
  [29]=>
  string(1) "5"
  [30]=>
  string(2) "55"
  [31]=>
  string(1) "5"
  [32]=>
  string(1) "5"
  [33]=>
  string(2) "5%"
  [34]=>
  string(1) "%"
  [35]=>
  string(1) "%"
  [36]=>
  string(1) "%"
  [37]=>
  string(1) "5"
  [38]=>
  string(1) "5"
  [39]=>
  string(1) "5"
  [40]=>
  string(1) "%"
  [41]=>
  string(1) "%"
  [42]=>
  string(1) "5"
  [43]=>
  string(1) "5"
  [44]=>
  string(1) "5"
  [45]=>
  string(1) "5"
  [46]=>
  string(2) "5%"
  [47]=>
  string(1) "%"
  [48]=>
  string(1) "%"
  [49]=>
  string(2) "55"
  [50]=>
  string(1) "1"
}

*** Testing explode() with string variations as input argument ***

-- Testing string with escape characters --
array(2) {
  [0]=>
  string(4) "1234"
  [1]=>
  string(10) "5678
	9100"
}
array(4) {
  [0]=>
  string(4) "1234"
  [1]=>
  string(4) "abcd"
  [2]=>
  string(4) "5678"
  [3]=>
  string(4) "rstu"
}

-- Testing string with embedded NULL --
array(4) {
  [0]=>
  string(4) "abcd"
  [1]=>
  string(5) "n1234"
  [2]=>
  string(5) "05678"
  [3]=>
  string(12) "00efgh\xijkl"
}
array(7) {
  [0]=>
  string(4) "abcd"
  [1]=>
  string(4) "efgh"
  [2]=>
  string(4) "ijkl"
  [3]=>
  string(4) "mnop"
  [4]=>
  string(5) "0qrst"
  [5]=>
  string(4) "uvwx"
  [6]=>
  string(2) "yz"
}

*** Testing error conditions ***

Warning: explode() expects at most 3 parameters, 4 given in %s/zend/good/ext/standard/tests/strings/explode1.php on line 66

Warning: explode() expects at least 2 parameters, 1 given in %s/zend/good/ext/standard/tests/strings/explode1.php on line 67
Done